name: Pull request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  build:
    uses: ./.github/workflows/build.yml
    secrets: inherit

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 50
      - name: Prepare environment
        uses: ./.github/workflows/prepare-environment
      - name: Check editorconfig
        run: npm run check:editorconfig
      - name: Check types
        run: npm run check:types
      - name: Lint
        run: npm run lint:js:all
      - name: Lint CSS
        run: npm run lint:css:all
      - name: Lint formatting
        run: npm run lint:formatting:all
      - name: Validate commits in pull request
        run: npx --no -- commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  deploy-example:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: example-${{ github.head_ref }}
      url: ${{ steps.resolve-example-url.outputs.url }}
    concurrency:
      group: 'pages'
      cancel-in-progress: false
    permissions:
      contents: write
    outputs:
      example-url: ${{ steps.resolve-example-url.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare environment
        uses: ./.github/workflows/prepare-environment
      - name: Deploy artifacts to github pages
        uses: ./.github/workflows/deploy-artifacts-to-github-pages
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Resolve example url
        id: resolve-example-url
        uses: ./.github/workflows/resolve-github-pages-url
        with:
          artifact-name: ${{ needs.build.outputs.example-artifact-name }}

  test:
    needs:
      - build
      - deploy-example
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.44.1-jammy
    outputs:
      playwright-report-url: ${{ steps.resolve-playwright-report-url.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare environment
        uses: ./.github/workflows/prepare-environment
      - name: Save metadata about deployment
        uses: ./.github/workflows/deployment-metadata
        id: metadata
      - name: Test unit
        run: npm run test:unit
      - name: Download storybook
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.storybook-artifact-name }}
          path: ./packages/core
      - name: Serve Storybook and run tests
        id: run_test
        continue-on-error: true
        env:
          # Для ветки main - https://colibrijs.github.io/colibrijs/main/example/
          BRANCH_NAME: ${{ steps.metadata.outputs.branch }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          PULL_REQUEST_NUMBER: ${{ github.event_name == 'pull_request' && github.event.number || '' }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY_NAME: ${{ github.event.repository.name }}
          REFERENCE_STORYBOOK_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/main/storybook/
          TESTING_STORYBOOK_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ steps.metadata.outputs.branch }}/storybook/
          EXAMPLE_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ steps.metadata.outputs.branch }}/example/
          COMMIT_SHA: ${{ github.sha }} # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
          "npm run storybook:serve -w @colibrijs/core" \
          "npm run test:interactions -w @colibrijs/core"
      - name: Move screenshots to storybook-build if it exists
        run: |
          if [ -d "./packages/core/screenshots" ]; then
            cp -r ./packages/core/screenshots ./packages/core/storybook-static
            cd ./packages/core/storybook-static
            ls -la
            cd ../../../
          fi
      - name: Save storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: ./packages/core/storybook-static
          overwrite: true
      - name: Check previous status
        if: steps.run_test.outcome != 'success'
        run: |
          echo "Ошибка: видимо упали тесты! Проверь в шаге 'Serve Storybook and run tests'"
          exit 1
      - name: Test e2e
        run: npm run test:e2e
        env:
          EXAMPLE_URL: ${{ needs.deploy-example.outputs.example-url }}
      - name: Save playwright report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./playwright-report
      - name: Resolve playwright-report url
        id: resolve-playwright-report-url
        uses: ./.github/workflows/resolve-github-pages-url
        with:
          artifact-name: playwright-report

  deploy:
    if: always()
    needs:
      - build
      - test
    permissions:
      contents: write
    uses: ./.github/workflows/deploy-github-pages.yml
    secrets: inherit
    with:
      playwright-report-artifact-name: ${{ needs.test.outputs.playwright-report-url }}
      storybook-artifact-name: ${{ needs.build.outputs.storybook-artifact-name }}
      swagger-artifact-name: ${{ needs.build.outputs.swagger-artifact-name }}
