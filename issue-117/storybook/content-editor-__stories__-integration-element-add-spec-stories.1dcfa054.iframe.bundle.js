"use strict";(self.webpackChunk_colibrijs_core=self.webpackChunk_colibrijs_core||[]).push([[1488],{"./components/content-editor/__stories__/integration-element-add.spec.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AfterIfSelected:()=>AfterIfSelected,AtEndIfNoSelected:()=>AtEndIfNoSelected,HiddenByDefault:()=>HiddenByDefault,HidesOnAdded:()=>HidesOnAdded,HidesOnClose:()=>HidesOnClose,VisibleOnClick:()=>VisibleOnClick,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}(function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({},__webpack_require__("./components/content-editor/__stories__/content-editor.stories.ts").default),{title:"ContentEditor/tests/integration-element-add"});var HiddenByDefault={name:"Добавление элемента скрыто по умолчанию"},VisibleOnClick={name:'При клике на кнопку "добавить элемент", начинается добавление элемента'},HidesOnClose={name:"Когда добавление элемента отменено, интерфейс добавления скрывается"},HidesOnAdded={name:"Когда добавляется новый элемент, интерфейс добавления скрывается"},AtEndIfNoSelected={name:"Если ни один из элементов не выбран, новый элемент добавляется в конец дерева"},AfterIfSelected={name:"Если один из элементов выбран, новый элемент добавляется после выбранного"};const __namedExportsOrder=["HiddenByDefault","VisibleOnClick","HidesOnClose","HidesOnAdded","AtEndIfNoSelected","AfterIfSelected"]}}]);